# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
*.so

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Специфичное для OCR проекта
# =====================================

# Логи приложения
*.log
logs/
ocr_platform.log
dash_app.log

# Временные файлы обработки
temp/
tmp/
temporary/
temp_images/
temp_pdfs/

# Загруженные файлы пользователей
uploads/
uploaded_files/
user_uploads/

# Обработанные результаты
results/
output/
processed/
ocr_results/

# Кеш изображений
image_cache/
.image_cache/
processed_images/

# Конфигурационные файлы с секретами
config.ini
settings.ini
.env.local
.env.production
secrets.json

# База данных (если будет использоваться)
*.db
*.sqlite
*.sqlite3
database.db

# Бэкапы
backup/
backups/
*.backup
*.bak

# IDE и редакторы
# =====================================

# Visual Studio Code
.vscode/
*.code-workspace

# PyCharm
.idea/
*.iml
*.ipr
*.iws

# Sublime Text
*.sublime-project
*.sublime-workspace

# Atom
.atom/

# Vim
*.swp
*.swo
*~
.vim/

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# OS специфичные файлы
# =====================================

# macOS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*

# Docker
# =====================================
# Не игнорируем Dockerfile, но игнорируем временные файлы Docker
.dockerignore.bak
docker-compose.override.yml

# Tesseract временные файлы
# =====================================
tesseract_temp/
*.tif
*.tiff

# Plotly/Dash специфичное
# =====================================
.dash_app_cache/
plotly_temp/

# Модели машинного обучения (если будут)
# =====================================
*.pkl
*.joblib
*.model
models/
trained_models/

# Тестовые данные
# =====================================
test_data/
sample_documents/
test_pdfs/
test_images/

# Документация build
# =====================================
docs/build/
site/

# Профилирование и бенчмарки
# =====================================
*.prof
benchmark_results/
performance_tests/

# Сертификаты и ключи
# =====================================
*.pem
*.key
*.crt
*.cer
*.p12
ssl/
certificates/

# Переменные окружения и конфиги
# =====================================
.env
.env.*
!.env.example
config/local.py
config/production.py
local_config.py

# Данные для разработки
# =====================================
dev_data/
development/
sandbox/

# Отчеты и аналитика
# =====================================
reports/
analytics/
statistics/
*.csv
*.xlsx
*.json
!requirements.txt

# Кеш pip
# =====================================
.pip_cache/

# Node.js (если будет фронтенд)
# =====================================
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
package-lock.json
yarn.lock